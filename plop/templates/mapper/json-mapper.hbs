import JSONMapper from '../JSONMapper';
import ErrorType from '../../../error/ErrorType';
import {{entity}}, { {{entity}}Interface } from '../../../domain/entities/{{module}}/{{entity}}';
import { APPLICATION_ERROR_FACTORY } from '../../errors/factories';

export default class {{entity}}JSONMapper implements JSONMapper<{{entity}}Interface, {{entity}}> {
  public toEntity(json: {{entity}}Interface): {{entity}} {
    if (
      !json.prop
    ) {
      throw APPLICATION_ERROR_FACTORY.getError(ErrorType.GENERAL, 'Invalid json');
    }
    const {{camelCase entity}}: {{entity}} = new {{entity}}(
      json.prop,
    );
    {{camelCase entity}}.prop = json.prop;
    return {{camelCase entity}};
  }

  public toJSON(entity: {{entity}}): {{entity}}Interface {
    return {
      prop: entity.prop,
    };
  }
}