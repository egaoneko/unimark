{{#ifEquals package "core"}}
import {{parentClass}} from '../{{#if parentModule}}{{parentModule}}/{{/if}}{{parentClass}}';
import { equals } from '../../../utils/common';
{{/ifEquals}}
{{#ifNotEquals package "core"}}
import {{parentClass}} from '@unimark/core/lib/{{parentLayer}}/entities/{{#if parentModule}}{{parentModule}}/{{/if}}{{parentClass}}';
import { equals } from '@unimark/core/lib/utils/common';
{{/ifNotEquals}}

export interface {{class}}Interface {
  prop: any;
}

export default class {{class}} implements {{parentClass}} {
  public prop!: any;

  public equal(other: {{class}}): boolean {
    return equals(this, other);
  }

  public clone(): {{class}} {
    const clone: {{class}} = new {{class}}();
    clone.prop = this.prop;
    return clone;
  }

  public toString(): string {
    return [
      this.prop,
    ].join(',');
  }
}
